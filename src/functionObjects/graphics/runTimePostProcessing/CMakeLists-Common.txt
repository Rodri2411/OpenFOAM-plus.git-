include(${VTK_USE_FILE})

if(VTK_LIBRARIES)
    message("Found VTK LIBRARIES: " ${VTK_USE_FILE})
endif()

if(${VTK_VERSION} VERSION_GREATER "6")
    message("VTK version: " ${VTK_VERSION})
else()
    message(FATAL_ERROR " VTK6 required")
endif()

include_directories(
    $ENV{WM_PROJECT_DIR}/src/OpenFOAM/lnInclude
    $ENV{WM_PROJECT_DIR}/src/OSspecific/$ENV{WM_OSTYPE}/lnInclude
    $ENV{WM_PROJECT_DIR}/src/surfMesh/lnInclude
    $ENV{WM_PROJECT_DIR}/src/finiteVolume/lnInclude
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
)

link_directories(
    $ENV{FOAM_LIBBIN}
)

add_definitions(
    -DWM_$ENV{WM_PRECISION_OPTION} -DNoRepository
    -DWM_LABEL_SIZE=$ENV{WM_LABEL_SIZE}
)

set(CMAKE_BUILD_TYPE Release)

set(CMAKE_CXX_FLAGS_DEBUG
    "-g -O0 -std=c++11 -Wall -Wextra -Wno-unused-parameter -Wnon-virtual-dtor -Wno-overloaded-virtual"
)
set(CMAKE_C_FLAGS_DEBUG "-g -O0 -std=c++11")

set(CMAKE_CXX_FLAGS_RELEASE
    "-O3 -std=c++11 -Wall -Wextra -Wno-unused-parameter -Wnon-virtual-dtor -Wno-overloaded-virtual")
set(CMAKE_C_FLAGS_RELEASE "-O3 -std=c++11")

# Set output library destination to plugin directory
set(LIBRARY_OUTPUT_PATH $ENV{FOAM_LIBBIN}
    CACHE INTERNAL
    ""
)

## Record VTK version for general bookkeeping
# file(WRITE
#     ${CMAKE_BINARY_DIR}/version
#     "VTK_VERSION=${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}.${VTK_BUILD_VERSION}\n"
# )

file(GLOB SOURCE_FILES
    fieldVisualisationBase.C
    functionObjectBase.C
    functionObjectCloud.C
    functionObjectLine.C
    functionObjectSurface.C
    geometryBase.C
    geometrySurface.C
    pathline.C
    pointData.C
    runTimePostProcessing.C
    runTimePostProcessingFunctionObject.C
    scene.C
    surface.C
    text.C
)

set(OPENFOAM_LIBRARIES
    OpenFOAM
    surfMesh
    finiteVolume
)

add_library(
    runTimePostProcessing
    SHARED
    ${SOURCE_FILES}
)

set_target_properties(
  runTimePostProcessing
  PROPERTIES
  VERSION ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}.${VTK_BUILD_VERSION}
  SOVERSION ${VTK_MAJOR_VERSION}
)

target_link_libraries(
    runTimePostProcessing
    ${VTK_LIBRARIES}
    ${OPENFOAM_LIBRARIES}
)

#-----------------------------------------------------------------------------
